{"version":3,"sources":["webpack:///./src/components/blurb.tsx"],"names":["Blurb","props","Article","className","clsx","style","Header","Heading","title","ImageContainer","image","data","alt","fixed","height","width","display","imgStyle","objectFit","objectPosition","position","Vignette","Description","children","LatestPostsBlurb","posts","useStaticQuery","allFile","nodes","PostList","LatestPostsImage","src","latestPostsGraphic","FoldedCorner","List","map","post","childMdx","ListItem","key","id","PostLink","to","slug","frontmatter","Actions","color","outlined","endIcon","BlurbContainer","gridTemplateColumns","gridAutoFlow","gap","borderRadius","overflow","filter","theme","mediaQueries","standard","gridColumn","palette","text","alternate","light","backgroundColor","bgs","secondary","main","boxShadow","dark","primary","paddingBottom","clipPath","accents","top","left","right","borderBottomLeftRadius","backgroundImage","borderBottom","fontFamily","typography","sans","fontSize","padding","blue","whiteSpace","textOverflow","margin","marginTop","marginBottom","Link","textDecoration","actions","fontWeight","bottom","transform"],"mappings":"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","file":"c8161b54-f45eb9a8a2649b05ad5d.js","sourcesContent":["import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { FixedObject } from \"gatsby-image\";\nimport styled from \"@emotion/styled\";\nimport clsx from \"clsx\";\n\nimport latestPostsGraphic from \"../images/posts.svg\";\nimport { Link, LinkButton } from \"../components/controls\";\nimport { ChevronIcon } from \"../components/graphics/icons\";\n\ntype PostData = {\n    allFile: {\n        nodes: {\n            childMdx: {\n                id: \"string\",\n                slug: \"string\",\n                frontmatter: {\n                    title: string,\n                    date: string,\n                }\n            }\n        }[]\n    }\n};\n\ntype BlurbProps = {\n    className?:     string,\n    title:          string,\n    date:           string,\n    style?:         string,\n    children?:      React.ReactNode,\n    image?: {\n        data?:      FixedObject | FixedObject[],\n        position?:  string\n    }\n};\n\nexport function Blurb(props: BlurbProps) {\n    return (\n        <Article className={ clsx(props.className, props.style) }>\n            <Header>\n                <Heading>{ props.title }</Heading>\n                <ImageContainer>\n                    { props.image && props.image.data && \n                    <Img \n                        alt         = { props.title }\n                        fixed       = { props.image.data } \n                        style       = {{ height: '100%', width: '100%', display: 'block' }} \n                        imgStyle    = {{\n                            objectFit:      \"cover\",\n                            objectPosition: props.image.position ? props.image.position : \"center center\",\n                        }} />\n                    }\n                    <Vignette />\n                </ImageContainer>\n            </Header>\n            <Description>\n                { props.children }\n            </Description>\n        </Article>\n    );\n}\n\nexport function LatestPostsBlurb({ className, style }: { className?: string, style?: string }) {\n    const { allFile: { nodes: posts }}: PostData = useStaticQuery(graphql`query {\n        allFile(\n            filter: { \n                sourceInstanceName: { eq: \"content\" }, \n                relativePath: { regex: \"/^posts/i\" }, \n                name: { eq: \"index\" }\n            }, \n            sort: {\n                fields: [\n                    childMdx___frontmatter___date\n                ],\n                order: [DESC, DESC]\n            },\n            limit: 5\n        ) {\n            nodes {\n                childMdx {\n                    id\n                    slug\n                    frontmatter {\n                        title\n                        date\n                    }\n                }\n            }\n        }\n    }`);\n    \n    return (\n        <PostList className={ clsx(className, style) }>\n            <Header>\n                <Heading>Latest Posts</Heading>\n                <ImageContainer >\n                    <LatestPostsImage src={ latestPostsGraphic } alt=\"Latest Posts\" />\n                </ImageContainer>\n                <FoldedCorner />\n            </Header>\n            <List>\n                { posts.map(({ childMdx: post }) => (\n                    <ListItem key={ post.id }>\n                        <PostLink to={ `/${ post.slug }` }>\n                            { post.frontmatter.title }\n                        </PostLink>\n                    </ListItem>\n                ))}\n            </List>\n            <Actions>\n                <LinkButton to=\"/posts\" color=\"primary\" outlined endIcon={ <ChevronIcon /> }>More</LinkButton>\n            </Actions>\n        </PostList>\n    );\n}\n\nconst foldSize = '4.0rem';\nconst containerBorderRadius = '1.0rem';\n\nexport const BlurbContainer = styled.div(({theme}) => ({\n    display:                'grid',\n    gridTemplateColumns:    '1fr',\n    gridAutoFlow:           'dense',\n    gap:                    '1rem',\n\n    borderRadius:           containerBorderRadius,\n    overflow:               'hidden',\n    filter:                 'drop-shadow(0 0.125rem 0.125rem rgba(0,0,0, .5)) drop-shadow(0 0 0.5rem rgba(0,0,0, .125))',\n\n    [theme.mediaQueries.standard]: {\n        gridTemplateColumns: 'repeat(auto-fit, minmax(18rem, 1fr))',\n\n        gap: '2rem',\n\n        '& .full-row':      { gridColumn: '1 / -1' },\n        '& .middle':        { gridColumn: '2 / -2' },\n        '& .right-large':   { gridColumn: '2 / -1' },\n        '& .left-large':    { gridColumn: '1 / -2' },\n        '& .right-small':   { gridColumn: '-3 / -1' },\n        '& .left-small':    { gridColumn: '1 / 3' }\n    },\n}));\n\nconst Article = styled.article(({theme}) => ({\n    position:           'relative',\n    borderRadius:       '0.5rem',\n    overflow:           'hidden',\n\n    color:              theme.palette.text.alternate.light,\n    backgroundColor:    theme.palette.bgs.secondary.main,\n    boxShadow:          'inset 0rem -0.125rem 0 0rem rgba(0,0,0, 0.33)',\n\n    '&:nth-of-type(even)': {\n        color:           theme.palette.text.standard.main,\n        backgroundColor: theme.palette.bgs.secondary.dark,\n    }\n}));\n\nconst PostList = styled.div(({theme}) => ({\n    color:              theme.palette.text.standard.light,\n    backgroundColor:    theme.palette.bgs.primary.main,\n    boxShadow:          'inset 0rem -0.125rem 0 0rem rgba(0,0,0, 0.33)',\n    position:           'relative',\n    borderRadius:       '0.5rem',\n    overflow:           'hidden',\n    paddingBottom:      '4.5rem',\n    clipPath:           `polygon(0 0, calc(100% - ${ foldSize }) 0, 100% ${ foldSize }, 100% 100%, 0 100%)`,\n    '& h2': {\n        color: theme.palette.accents.light,\n        backgroundColor: theme.palette.bgs.primary.dark\n    }\n}));\n\nconst Header = styled.header();\n\nconst ImageContainer = styled.div({\n    position:   'relative',\n    height:     '12rem',\n    background: 'rgba(0,0,0,0.25)'\n});\n\nconst LatestPostsImage = styled.img({\n    width:  'calc(100% - 2rem)',\n    height: 'calc(100% - 2rem)',\n    margin: '1rem'\n});\n\nconst Vignette = styled.div(({theme}) => ({\n    width:      '100%',\n    height:     '100%',\n    position:   'absolute',\n    top:        0,\n    left:       0,\n    boxShadow:  `inset 0 0 6rem ${ theme.palette.bgs.secondary.dark }`\n}));\n\nconst FoldedCorner = styled.div(({theme}) => ({\n    position:               'absolute',\n    top:                    0,\n    right:                  0,\n    width:                  foldSize,\n    height:                 foldSize,\n    borderBottomLeftRadius: containerBorderRadius,\n\n    backgroundColor: theme.palette.bgs.primary.main,\n    backgroundImage: `linear-gradient(\n        45deg,\n        ${ theme.palette.bgs.primary.light },\n        rgba(0,0,0,0.33) 50%\n    )`,\n\n    // inset 0rem -0.0625rem 0 0rem #1e1320,\n    borderBottom: '0.125rem solid #1a101c',\n    boxShadow: `\n        0 0.125rem 0.125rem rgba(0,0,0, 0.5), \n        0 0 0.5rem rgba(0,0,0, 0.125)\n    `\n}));\n\nconst Heading = styled.h2(({theme}) => ({\n    fontFamily:         theme.typography.sans.fontFamily,\n    fontSize:           '1.2rem',\n    padding:            '0.5rem 1rem',\n    width:              'calc(100% - 2rem)',\n    color:              theme.palette.accents.blue,\n    backgroundColor:    theme.palette.bgs.secondary.dark,\n    \n    whiteSpace:         'nowrap',\n    overflow:           'hidden',\n    textOverflow:       'ellipsis'\n}));\n\nconst Description = styled.div(() => ({\n    margin: '1rem',\n    '& > p:first-of-type': {\n        marginTop: 0\n    },\n    '& > p:last-of-type': {\n        marginBottom: 0\n    },\n    '& > p:only-of-type': {\n        margin: '1rem 0'\n    }\n}))\n\nconst List = styled.ul(() => ({\n    padding: '0 0.5rem'\n}));\n\nconst ListItem = styled.li(() => ({\n    padding: '0.5rem 0',\n    borderBottom: '0.0625rem solid rgba(255,255,255,0.1)'\n}));\n\nconst PostLink = styled(Link)(({theme}) => ({\n    textDecoration: 'none',\n    color:          theme.palette.actions.primary.main,\n    display:        'block',\n    borderRadius:   '0.25rem',\n    padding:        '0.25rem 0.5rem',\n\n    overflow:       'hidden',\n    textOverflow:   'ellipsis',\n    whiteSpace:     'nowrap',\n    fontSize:       '0.9rem',\n    fontWeight:     'bold',\n    \n    '&:hover': {\n        color: theme.palette.actions.primary.light,\n        backgroundColor: theme.palette.bgs.primary.light\n    }\n}));\n\nconst Actions = styled.div(() => ({\n    position:   'absolute',\n    bottom:     '1rem',\n    left:       '50%',\n    transform:  'translateX(-50%)'\n}));\n\n\nexport default Blurb;"],"sourceRoot":""}