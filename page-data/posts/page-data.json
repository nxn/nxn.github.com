{"componentChunkName":"component---src-pages-posts-tsx","path":"/posts/","result":{"data":{"site":{"siteMetadata":{"title":"nxn.io"}},"allFile":{"group":[{"fieldValue":"2021","totalCount":2,"nodes":[{"childMdx":{"id":"4824a91c-29ea-575d-a9bb-3d9543db6273","slug":"posts/vscode_remote/","excerpt":"VS Code Remote: WSL + SSH Agent Forwarding A step by step guide for configuring tools necessary to develop remotely with Visual Studio Code over SSH. The\ndocumented setup enables connections to standard Windows environments as well as Windows Subsystem for Linux\ndistributions. In addition, it also shows how to…","fields":{"day":15,"month":1,"year":2021,"summaryMdx":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst layoutProps = {};\nconst MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `A step by step guide for configuring tools necessary to develop remotely with Visual Studio Code over SSH. The\ndocumented setup enables connections to standard Windows environments as well as Windows Subsystem for Linux\ndistributions. In addition, it also shows how to configure SSH Agent Forwarding for connecting to services like GitHub\nwithout having to store copies of privates keys or enter passphrases.`));\n}\n\n;\nMDXContent.isMDXComponent = true;","summaryText":"A step by step guide for configuring tools necessary to develop remotely with Visual Studio Code over SSH. The documented setup enables connections to standard Windows environments as well as Windows Subsystem for Linux distributions. In addition, it also shows how to configure SSH Agent Forwarding for connecting to services like GitHub without having to store copies of privates keys or enter passphrases."},"frontmatter":{"title":"VS Code Remote: WSL + SSH Agent Forwarding"}}},{"childMdx":{"id":"56c4ae69-8f1e-53c2-a8cd-df41abf5ea5d","slug":"posts/welcome/","excerpt":"Hello and Welcome This website is a little project that I've been working on for the last few weeks. Initially, it was intended to serve \nas a quick showcase of my recent work, however, I came to the realization that I would also like to occasionally \ndocument and share insights regarding development and the…","fields":{"day":14,"month":1,"year":2021,"summaryMdx":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nconst layoutProps = {};\nconst MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `This website is a little project that I've been working on for the last few weeks. Initially, it was intended to serve\nas a quick showcase of my recent work, however, I came to the realization that I would also like to occasionally\ndocument and share insights regarding development and the technologies I work with. To that end, I will be updating the\nsite on a periodic basis with my findings. `));\n}\n\n;\nMDXContent.isMDXComponent = true;","summaryText":"This website is a little project that I've been working on for the last few weeks. Initially, it was intended to serve  as a quick showcase of my recent work, however, I came to the realization that I would also like to occasionally  document and share insights regarding development and the technologies I work with. To that end, I will be updating the site on a periodic basis with my findings. "},"frontmatter":{"title":"Hello and Welcome"}}}]}]}},"pageContext":{}},"staticQueryHashes":["2703881467","3159585216","3159585216","3159585216","63159454"]}